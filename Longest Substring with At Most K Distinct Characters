Description
Given a string S, find the length of the longest substring T that contains at most k distinct characters.

Example
Example 1:

Input: S = "eceba" and k = 3
Output: 4
Explanation: T = "eceb"
Example 2:

Input: S = "WORLD" and k = 4
Output: 4
Explanation: T = "WORL" or "ORLD"
Challenge
O(n) time


class Solution:
    """
    @param s: A string
    @param k: An integer
    @return: An integer
    """
    def lengthOfLongestSubstringKDistinct(self, s, k):

        dic = {}
        res = float("-inf")
        l = 0 
        if k == 0:
            return 0
        

        for i,num in enumerate(s):
            if num in dic:
                dic[num] +=1

            else:
                dic[num] = 1

            while len(dic) > k:
                if dic[s[l]] == 1:
                    del dic[s[l]]
                else:
                    dic[s[l]] -=1
                l +=1 
            res = max(res,i-l+1)

        return max(res,sum(dic.values()))


            

        # write your code here
